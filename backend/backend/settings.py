"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 5.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
from datetime import timedelta
from dotenv import load_dotenv
import os

load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-217-y&bbo8fz1yg2xm&2qh_vih5r*$b-xuw0$oh@hw^g13vff!'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# Quais hosts/domínios podem servir a aplicação Django
ALLOWED_HOSTS = ["*"] # permite que qualquer host/domínio sirva sua aplicação
# É útil para desenvolvimento, mas perigoso em produção
# Configuração Recomendada para Produção:
# ALLOWED_HOSTS = [
#     'seuprojeto.com',
#     'api.seuprojeto.com',
#     'www.seuprojeto.com',
#     'localhost',
#     '127.0.0.1'
# ]
# Melhor prática: usar variável de ambiente .env:
# ALLOWED_HOSTS = os.getenv('DJANGO_ALLOWED_HOSTS', '').split(',')
# Em produção, sempre especifique explicitamente os hosts permitidos para melhorar a segurança da aplicação.

# Padrões globais de autenticação e permissões para a API REST
REST_FRAMEWORK = { # Define JWT (JSON Web Token) como método padrão de autenticação
    "DEFAULT_AUTHENTICATION_CLASSES": ( # Formato: Authorization: Bearer <seu_token_jwt>
        "rest_framework_simplejwt.authentication.JWTAuthentication",
    ),
    "DEFAULT_PERMISSION_CLASSES": [ # Requer que usuários estejam autenticados para acessar qualquer endpoint
        "rest_framework.permissions.IsAuthenticated", # Retorna erro 401 (Unauthorized) se não autenticado
    ],
    # Exemplo:
    # GET /api/endpoint
    # Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGc...
}

SIMPLE_JWT = { # Define o tempo de vida do token de acesso e atualização
    "ACCESS_TOKEN_LIFETIME": timedelta(minutes=30), # Token de acesso curto
    "REFRESH_TOKEN_LIFETIME": timedelta(days=1),    # Token de atualização longo
    # "BLACKLIST_AFTER_ROTATION": True, # Opcional: invalidar token anterior
}

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'api', # nossa API para acesso ao Django no backend
    'rest_framework', # Framework que facilita a construção de APIs REST
    'corsheaders', # Gerencia o Cross-Origin Resource Sharing (CORS)
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',

    # Componente para gerenciar requisições CORS (Cross-Origin Resource Sharing)
    "corsheaders.middleware.CorsMiddleware", # Deve vir antes do CommonMiddleware

    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'backend.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "NAME": os.getenv("DB_NAME", "bkndb"),
        "USER": os.getenv("DB_USER", "bkndb"),
        "PASSWORD": os.getenv("DB_PASSWORD", "bkndb"),
        "HOST": os.getenv("DB_HOST", "db"),
        "PORT": os.getenv("DB_PORT", "5432"),
    }
}



# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'pt-br'

TIME_ZONE = 'America/Sao_Paulo'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Comportamento do Cross-Origin Resource Sharing (CORS)
# False em Produção; True em desenvolvimento!
# CORS_ALLOW_ALL_ORIGINS = True # Permite que qualquer domínio faça requisições para API
# CORS_ALLOWS_CREDENTIALS = True # Permite que requisições incluam credenciais (cookies, headers de autenticação)
"""
Configuração Recomendada para Produção
Para um ambiente de produção, você deve:

Desabilitar CORS_ALLOW_ALL_ORIGINS
Especificar explicitamente os domínios permitidos:
"""
ALLOWED_HOSTS = os.getenv('DJANGO_ALLOWED_HOSTS', 'localhost,127.0.0.1').split(',')

CORS_ALLOWED_ORIGINS = os.getenv('CORS_ALLOWED_ORIGINS', 'http://localhost:5173').split(',')
CORS_ALLOW_ALL_ORIGINS = False
# CORS_ALLOW_ALL_ORIGINS = False
# CORS_ALLOWED_ORIGINS = [
#     "https://seufrontend.com",
#     "https://app.seufrontend.com"
# ]
CORS_ALLOWS_CREDENTIALS = True